name: CD Yandex

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Prepare integration tests
        run: |
          sudo docker run --name pg-tests -e POSTGRES_PASSWORD=password -p 5432:5432 -d postgres:14
          rm ./.env
          echo "POSTGRES_URL=$POSTGRES_URL
          " > .env
          sleep 5
          alembic upgrade head
        env:
          POSTGRES_URL: postgresql://postgres:password@localhost:5432/postgres

      - name: Run integration tests
        run: |
          pytest ./tests

  build-and-push-to-yc:
    name: Build and push to YandexCloud Registry
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build docker image
        run: |
          docker build . --file Dockerfile --tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/appointment-service:latest

      - name: Login to YC Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_KEYS }}

      - name: Push tag YC Registry
        run: |
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/appointment-service:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-and-push-to-yc]
    steps:
    - name: Deploy serverless container
      uses: yc-actions/yc-sls-container-deploy@v1
      with:
        yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
        container-name: ${{ secrets.YC_CONTAINER_NAME }}
        folder-id: ${{ secrets.YC_FOLDER_ID }}
        revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/appointment-service:latest
        revision-service-account-id: ${{ secrets.YC_SA_ID }}
        revision-env: |
          POSTGRES_URL=${{ secrets.ENV_POSTGRES_URL }}